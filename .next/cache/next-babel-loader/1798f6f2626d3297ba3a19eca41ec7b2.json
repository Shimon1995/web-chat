{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport InputField from \"../components/chat-components/InputField\";\nimport TextArea from \"../components/chat-components/TextArea\";\nimport io from \"socket.io-client\";\n\nvar Chat =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chat, _Component);\n\n  function Chat() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Chat)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      socket: io(),\n      chat: [],\n      message: {\n        name: \"Brad\",\n        msg: \"\"\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          socket = _this$state.socket,\n          message = _this$state.message;\n      socket.on(\"message\", function (mssg) {\n        _this2.setState({\n          chat: [].concat(_toConsumableArray(_this2.state.chat), [mssg]),\n          message: {\n            name: message.name,\n            msg: \"\"\n          }\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.state.socket.disconnect();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Layout, {\n        title: \"Chat\"\n      }, React.createElement(\"div\", {\n        className: \"chat\"\n      }, React.createElement(\"h1\", null, \"Chat Application\"), React.createElement(TextArea, {\n        messages: this.state.chat\n      }), React.createElement(InputField, {\n        message: this.state.message,\n        onInput: this.takeInput.bind(this),\n        onSend: this.sendMessage.bind(this)\n      })));\n    }\n  }, {\n    key: \"takeInput\",\n    value: function takeInput(event) {\n      this.setState({\n        message: {\n          name: this.state.message.name,\n          msg: event.currentTarget.value\n        }\n      });\n    }\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(event) {\n      event.preventDefault();\n      var _this$state2 = this.state,\n          message = _this$state2.message,\n          socket = _this$state2.socket,\n          chat = _this$state2.chat;\n      socket.emit(\"msg\", message);\n      this.setState({\n        chat: [].concat(_toConsumableArray(chat), [{\n          name: \"Me\",\n          msg: message.msg\n        }]),\n        message: {\n          name: message.name,\n          msg: \"\"\n        }\n      });\n    }\n  }]);\n\n  return Chat;\n}(Component);\n\nexport default Chat;","map":{"version":3,"sources":["/home/hermit/Google Drive/Projects/nextjs/socket.io.scndTry/pages/chat.tsx"],"names":["Component","Layout","InputField","TextArea","io","Chat","socket","chat","message","name","msg","state","on","mssg","setState","disconnect","takeInput","bind","sendMessage","event","currentTarget","value","preventDefault","emit"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,QAAqC,OAArC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0CAAvB;AACA,OAAOC,QAAP,MAAqB,wCAArB;AACA,OAAOC,EAAP,MAAe,kBAAf;;IASMC,I;;;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,MAAM,EAAEF,EAAE,EADJ;AAENG,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE,MADC;AAEPC,QAAAA,GAAG,EAAE;AAFE;AAHH,K;;;;;;;wCAQkB;AAAA;;AAAA,wBACI,KAAKC,KADT;AAAA,UAChBL,MADgB,eAChBA,MADgB;AAAA,UACRE,OADQ,eACRA,OADQ;AAExBF,MAAAA,MAAM,CAACM,EAAP,CAAU,SAAV,EAAqB,UAACC,IAAD,EAAoB;AACvC,QAAA,MAAI,CAACC,QAAL,CAAc;AACZP,UAAAA,IAAI,+BAAM,MAAI,CAACI,KAAL,CAAWJ,IAAjB,IAAuBM,IAAvB,EADQ;AAEZL,UAAAA,OAAO,EAAE;AAAEC,YAAAA,IAAI,EAAED,OAAO,CAACC,IAAhB;AAAsBC,YAAAA,GAAG,EAAE;AAA3B;AAFG,SAAd;AAID,OALD;AAMD;;;2CAC4B;AAC3B,WAAKC,KAAL,CAAWL,MAAX,CAAkBS,UAAlB;AACD;;;6BACQ;AACP,aACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC;AAAd,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,mDADF,EAEE,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWJ;AAA/B,QAFF,EAGE,oBAAC,UAAD;AACE,QAAA,OAAO,EAAE,KAAKI,KAAL,CAAWH,OADtB;AAEE,QAAA,OAAO,EAAE,KAAKQ,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAFX;AAGE,QAAA,MAAM,EAAE,KAAKC,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB;AAHV,QAHF,CADF,CADF;AAaD;;;8BACSE,K,EAA0C;AAClD,WAAKL,QAAL,CAAc;AACZN,QAAAA,OAAO,EAAE;AAAEC,UAAAA,IAAI,EAAE,KAAKE,KAAL,CAAWH,OAAX,CAAmBC,IAA3B;AAAiCC,UAAAA,GAAG,EAAES,KAAK,CAACC,aAAN,CAAoBC;AAA1D;AADG,OAAd;AAGD;;;gCACWF,K,EAAyC;AACnDA,MAAAA,KAAK,CAACG,cAAN;AADmD,yBAEjB,KAAKX,KAFY;AAAA,UAE3CH,OAF2C,gBAE3CA,OAF2C;AAAA,UAElCF,MAFkC,gBAElCA,MAFkC;AAAA,UAE1BC,IAF0B,gBAE1BA,IAF0B;AAGnDD,MAAAA,MAAM,CAACiB,IAAP,CAAY,KAAZ,EAAmBf,OAAnB;AACA,WAAKM,QAAL,CAAc;AACZP,QAAAA,IAAI,+BAAMA,IAAN,IAAY;AAAEE,UAAAA,IAAI,EAAE,IAAR;AAAcC,UAAAA,GAAG,EAAEF,OAAO,CAACE;AAA3B,SAAZ,EADQ;AAEZF,QAAAA,OAAO,EAAE;AAAEC,UAAAA,IAAI,EAAED,OAAO,CAACC,IAAhB;AAAsBC,UAAAA,GAAG,EAAE;AAA3B;AAFG,OAAd;AAID;;;;EAjDgBV,S;;AAoDnB,eAAeK,IAAf","sourcesContent":["import { Component, FormEvent } from \"react\";\nimport Layout from \"../components/Layout\";\nimport InputField from \"../components/chat-components/InputField\";\nimport TextArea from \"../components/chat-components/TextArea\";\nimport io from \"socket.io-client\";\nimport { Dialogue } from \"../components/types\";\n\ninterface State {\n  socket: SocketIOClient.Socket;\n  chat: Dialogue[];\n  message: Dialogue;\n}\n\nclass Chat extends Component<void, State> {\n  state = {\n    socket: io(),\n    chat: [],\n    message: {\n      name: \"Brad\",\n      msg: \"\"\n    }\n  };\n  componentDidMount(): void {\n    const { socket, message } = this.state;\n    socket.on(\"message\", (mssg: Dialogue) => {\n      this.setState({\n        chat: [...this.state.chat, mssg],\n        message: { name: message.name, msg: \"\" }\n      });\n    });\n  }\n  componentWillUnmount(): void {\n    this.state.socket.disconnect();\n  }\n  render() {\n    return (\n      <Layout title=\"Chat\">\n        <div className=\"chat\">\n          <h1>Chat Application</h1>\n          <TextArea messages={this.state.chat} />\n          <InputField\n            message={this.state.message}\n            onInput={this.takeInput.bind(this)}\n            onSend={this.sendMessage.bind(this)}\n          />\n        </div>\n      </Layout>\n    );\n  }\n  takeInput(event: FormEvent<HTMLInputElement>): void {\n    this.setState({\n      message: { name: this.state.message.name, msg: event.currentTarget.value }\n    });\n  }\n  sendMessage(event: FormEvent<HTMLFormElement>): void {\n    event.preventDefault();\n    const { message, socket, chat } = this.state;\n    socket.emit(\"msg\", message);\n    this.setState({\n      chat: [...chat, { name: \"Me\", msg: message.msg }],\n      message: { name: message.name, msg: \"\" }\n    });\n  }\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}